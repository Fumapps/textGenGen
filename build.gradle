ext.languageName = "TextGenGen"
ext.mpsVersion = "2024.1"
ext.mpsPlugins = [
        "mps-grammar-cells[2023.3]": 13242,
        // we only need grammar cells, since there is no 2024.1 yet, we need to specify all transitive dependencies also for 2023.3
        "de.itemis.mps.selection[2023.3]": 13230,
        "de.itemis.mps.celllayout[2023.3]": 13239,
        "de.slisson.mps.richtext[2023.3]": 13254,
        "de.slisson.mps.hacks[2023.3]": 13235,
        "de.slisson.mps.editor.multiline[2023.3]": 13253,
        "de.itemis.mps.extensions.build[2023.3]": 17136,
]
ext.customMpsPlugins = [ ]

apply from: 'gradle/init-gradle-scripts.gradle'

task prepareMps {
    group 'mps'
    dependsOn buildOsSpecificBundle
}

// due to MPS-33503 The "generate" task cannot handle java source stub models correctly (a minimalistic test case included)
// we have to compile the java sources and include class files in MPS, to make our build from CLI work
task assembleEditorToTextJar(type: Exec) {
    group 'mps'
    def javaStubsModule = "$projectDir/solutions/TextGenGen.javastubs"
    def javaFiles = fileTree("$javaStubsModule/java_src/EditorToText_IDEA").matching {
        include "**/*.java"
    }.collect { it.toString() }
    commandLine "$javaHome/bin/javac", "-d", "$buildDir/java_src"
    args javaFiles
    doLast {
        ant.jar(destfile: "$javaStubsModule/java_src/lib/editorToText.jar", basedir: "$buildDir/java_src")
    }
}

task mpsBuild {
    group 'mps'
    dependsOn 'mpsAntGenerate', 'mpsAntBuild', assembleEditorToTextJar
}

task mpsClean {
    group 'mps'
    dependsOn 'mpsAntClean', 'mpsAntCleanSources'
}

task mpsTest {
    group 'mps'
    dependsOn 'mpsAntCheck', 'parseTestReportAfterAntCheck'
}

task openProjectInMps {
    group 'mps'
    dependsOn 'mpsOpenProjectInMpsForCurrentOs'
}

task buildAndOpenProjectInMps {
    group 'mps'
    dependsOn mpsBuild, openProjectInMps
}
